services:
  postgres:
    image: postgres:15
    container_name: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: mtk_user
      POSTGRES_PASSWORD: mov1eDevPass
      POSTGRES_DB: MTK
    networks:
      - mtk_net
  pgAdmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@dev.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - mtk_net
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.27
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    volumes:
      - es-data:/usr/share/elasticsearch/data
    command:
      - /bin/bash
      - -c
      - |
        if [ ! -d plugins/ik ]; then
          elasticsearch-plugin install --batch https://release.infinilabs.com/analysis-ik/stable/elasticsearch-analysis-ik-7.17.27.zip  
        fi
        /usr/local/bin/docker-entrypoint.sh elasticsearch
    networks:
      - mtk_net
  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.27
    container_name: kibana
    depends_on:
      - elasticsearch
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200

    ports:
      - "5601:5601"
    networks:
      - mtk_net
  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"
    networks:
      - mtk_net

  kafka:
    image: confluentinc/cp-kafka:7.6.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - mtk_net

  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - mtk_net
  redis_insight:
    image: redislabs/redisinsight:latest
    container_name: redisinsight
    ports:
      - "5540:5540"
    depends_on:
      - redis
    networks:
      - mtk_net

  mtk:
    image: hsinshengsouth/mtk:latest
    container_name: mtk
    depends_on:
      - postgres
      - kafka
      - elasticsearch
      - redis
    environment:
      SPRING_PROFILES_ACTIVE: docker

    ports:
      - "8080:8080"
    networks:
      - mtk_net

volumes:
  postgres-data:
  es-data:

networks:
  mtk_net:
    driver: bridge
